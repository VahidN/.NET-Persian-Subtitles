1
00:00:00,310 --> 00:00:05,026
‫تمام عناصر دارای خواص طول و عرض
‫هستند.

2
00:00:05,067 --> 00:00:08,245
‫که امکان تنظیم طول و عرض را
‫به پیکسل می‌دهند.

3
00:00:08,450 --> 00:00:12,603
‫هرچند این ابعاد عموما پیکسل نخواهند بود.

4
00:00:12,799 --> 00:00:15,311
‫زیرا پیکسل به طور قابل ملاحظه ای
‫کوچک ‫است.

5
00:00:15,481 --> 00:00:23,342
‫دقت بعضی از نمایشگرها 100 پیکسل در
‫اینچ است و بعضی 300

6
00:00:23,577 --> 00:00:29,332
‫برای مثال علاقمند نیستید که در یک
‫برنامه لمسی، عرض برنامه شما به یک
‫سوم خود کاهش یابد.

7
00:00:29,449 --> 00:00:32,490
‫زیرا تمام عناصر باید به اندازه کافی
‫بزرگ باشند تا بتوان در صفحات لمسی
‫از آن‌ها استفاده کرد.

8
00:00:32,862 --> 00:00:42,200
‫بنابراین در وسایلی با دقت بالا (تعداد
‫پیکسل بالا در یک اینچ) اگر اندازه
‫پیکسل‌ها را محاسبه کنید، چند برابر
‫اندازه ای که انتظار داشته اید محاسبه خواهند شد.

9
00:00:42,432 --> 00:00:44,681
‫زیرا نهایتا اندازه مهم است.

10
00:00:45,002 --> 00:00:55,536
‫نکتهٔ دیگری که در مورد خواص
‫طول و عرض وجود دارد این است
‫که عموما بیانگر طول و عرض واقعی
‫عناصر نیستند.

11
00:00:55,740 --> 00:01:03,490
‫برای مثال مقدار پیش فرض، مساوی NaN یا
‫Not a number است.

12
00:01:03,511 --> 00:01:08,481
‫در سیستم طرحبندی XAML این مورد به
‫Auto ترجمه شده است.

13
00:01:08,570 --> 00:01:12,410
‫بجای اینکه طول و عرض را دقیقا
‫مشخص نمائید.

14
00:01:12,817 --> 00:01:17,063
‫عناصر عموما دارای اندازه نامعینی هستند.

15
00:01:17,144 --> 00:01:20,132
‫برای مثال زمانیکه یک TextBlock متنی را
‫نمایش می‌دهد

16
00:01:20,355 --> 00:01:27,909
‫بر اساس نوع قلم، اندازه، حالت و
‫غیره آن می‌تواند تشخیص دهد که
‫به چه طول و عرضی نیاز دارد.

17
00:01:28,329 --> 00:01:38,767
‫بنابراین در این حالت بهتر است که
‫طول و عرض TextBlock مشخص نشود زیرا
‫به سادگی ممکن است با اشتباه محاسباتی،
‫قسمتی از متن نمایش داده نشود.

18
00:01:39,188 --> 00:01:45,895
‫اجازه دادن به المان‌های بصری جهت
‫تعیین اندازه خود اصطلاحا Size to content
‫گفته می‌شود.

19
00:01:46,208 --> 00:01:51,249
‫همچنین می‌توان حالت تنظیم اندازه
‫خودکار را در طول انجام داد و
‫نه برای مثال در عرض.

20
00:01:51,277 --> 00:01:58,032
‫برای نمونه اگر خاصیت TextWrapping
‫یک TextBlock ‫را تنظیم کنیم…

21
00:01:58,409 --> 00:02:02,563
‫می توان عرض را دقیقا تعیین کرد
‫اما ارتفاع را تعیین نشده قرار داد.

22
00:02:02,686 --> 00:02:08,913
‫به این ترتیب TextBlock یک متن را
‫به چند سطر با توجه به عرض
‫تعیین شده، خواهد شکست.

23
00:02:09,197 --> 00:02:12,194
‫که در حقیقت نوعی Size to Content
‫عمودی است.

24
00:02:12,225 --> 00:02:17,317
‫همچنین باید دقت داشت که در اکثر
‫موارد حتی عرض را هم به صورت
‫صریح ذکر نخواهیم کرد.

25
00:02:17,720 --> 00:02:22,548
‫عموما طول و عرض توسط المان دربرگیرنده
‫اعمال و تعیین می‌گردد.

26
00:02:22,770 --> 00:02:27,054
‫برای مثال چون برنامه‌های مترو تمام
‫صفحه اجرا می‌شوند.

27
00:02:27,422 --> 00:02:32,921
‫طول و عرض برنامه شما توسط اندازه
‫مهیای صفحه تعیین می‌گردد.

28
00:02:33,121 --> 00:02:37,780
‫بنابراین هیچگاه نباید طول و عرض المانهای
‫اصلی برنامه را تعیین کرد.

29
00:02:38,170 --> 00:02:41,035
‫زیرا این ابعاد توسط سیستم به برنامه
‫اعمال می‌گردند.

30
00:02:41,310 --> 00:02:47,460
‫زمانیکه یک طول و عرض یک المان
‫توسط عناصر دربرگیرنده آن تعیین می‌شوند…

31
00:02:47,567 --> 00:02:50,368
‫ما به آن طرحبندی مقید شده می‌‫گوئیم.

32
00:02:50,503 --> 00:02:56,697
‫بدیهی است این قیود توسط اندازه صفحه
‫اعمال شده اند اما در واقع تعداد
‫قیود زیادی وجود دارند.

33
00:02:56,963 --> 00:03:00,035
‫در حقیقت خواصی وجود دارند که توسط
‫آن‌ها می‌توان این قیود را
‫مشخص کرد.

34
00:03:00,376 --> 00:03:04,702
‫برای مثال تمام المان‌ها دارای خواصی
‫به نام‌های MinWidth و MinHeight هستند.

35
00:03:05,071 --> 00:03:09,082
‫در صورت عدم تنظیم این موارد، یک
‫المان به صورت خودکار به اندازهٔ
‫محتوای خود درخواهد آمد.

36
00:03:09,449 --> 00:03:12,529
‫برای مثال کنترل دکمه را درنظر بگیرید.

37
00:03:12,750 --> 00:03:18,429
‫بهتر است حالت Size to Content جهت
‫بومی سازی برنامه و ترجمه قسمت‌های ‫
‫مختلف درنظر گرفته شود.

38
00:03:18,613 --> 00:03:26,477
‫برای مثال اگر اندازه یک دکمه را
‫ثابت تعریف کنید، ممکن است برای یک
‫متن انگلیسی به اندازه کافی عریض باشد
‫اما برای یک متن مثلا آلمانی شاید
‫خیر.

39
00:03:26,516 --> 00:03:29,375
‫دسترسی پذیری نیز یکی دیگر از دلایل
‫است.

40
00:03:29,604 --> 00:03:34,456
‫کاربرانی با دید و بینایی کم، نیاز
‫دارند تا اندازه متون را درشت‌تر ‫کنند.

41
00:03:34,714 --> 00:03:43,291
‫علاوه بر Size to Content شاید نیاز
‫داشته باشید که تعیین کنید یک دکمه
‫بیش از حد کوچک نشود.

42
00:03:43,471 --> 00:03:47,253
‫که خصوصا جهت برنامه‌های لمسی بسیار
‫مهم است.

43
00:03:47,300 --> 00:03:53,836
‫اینجا است که خواص MinWidth و
‫MinHeight به کار خواهند آمد و حداقل
‫اندازه قابل قبول را تعریف می‌کنند.

44
00:03:53,955 --> 00:03:58,001
‫با توجه به اینکه در این حالت
‫هنوز یک دکمه در صورت نیاز می‌‫تواند
‫بر اساس اندازه یا فونت جدید
‫خود بزرگتر شود.

45
00:03:58,353 --> 00:04:03,801
‫به علاوه عناصر دارای خواص MaxWidth
‫و MaxHeight نیز می‌باشند.

46
00:04:04,002 --> 00:04:06,650
‫که توسط آن‌ها می‌توان حداکثر
‫اندازه یک عنصر بصری را
‫مشخص کرد.

47
00:04:06,906 --> 00:04:10,950
‫که ممکن است در اندازه‌های مختلف
‫صفحه یا قلم و غیره، ممکن است
‫محتوا را تخریب کنند و الزامی به
‫تنظیم آن نیست.

48
00:04:11,244 --> 00:04:23,930
‫برای مثال حین نمایش یک تصویر، با
‫تعیین حداکثر اندازه آن، تصویر به صورت
‫خودکار جهت جای گرفتن در این فضا
‫در صورت بزرگتر بودن از آن، تغییر
‫ابعاد خواهد یافت.

49
00:04:24,288 --> 00:04:29,214
‫در ادامه خواهید دید که این خواص
‫تنها منابع اعمال قیود نیستند.

50
00:04:29,337 --> 00:04:32,863
‫المان دربرگیرنده عنصر جاری نیز می‌تواند
‫قیود خاص خودش را اعمال نماید.

51
00:04:33,055 --> 00:04:37,796
‫حتی اگر طول و عرض را تنظیم
‫نمائید، XAML گاهی از اوقات آن ها را
‫ندید خواهد گرفت.

52
00:04:37,921 --> 00:04:40,721
‫زیرا ممکن است فضای کافی برای آن
‫وجود نداشته باشد.

53
00:04:40,969 --> 00:04:44,620
‫برای مثال اگر بخواهیم عنصری را عریض‫تر
‫از صفحه طراحی کنیم…

54
00:04:44,757 --> 00:04:46,475
‫در عمل کوچکتر نمایش داده خواهد شد.

55
00:04:46,515 --> 00:04:53,852
‫حال اگر بخواهیم اندازه واقعی را بدانیم،
‫می توان از دو خاصیت دیگر مرتبط
‫با اندازه استفاده کرد.

56
00:04:54,094 --> 00:04:56,539
‫خواص ActualWidth و ActualHeight

57
00:04:56,674 --> 00:04:59,293
‫این خواص فقط خواندنی هستند…

58
00:04:59,662 --> 00:05:03,172
‫که خروجی محاسباتی سیستم طرحبندی می‌باشند.

59
00:05:03,491 --> 00:05:07,397
‫باید دقت داشت که این خواص در
‫طول زمان مقادیر متفاوتی را گزارش می‌‫دهند.

60
00:05:07,504 --> 00:05:11,207
‫برای مثال اگر این خواص را پیش
‫از موقع بخوانیم، هر دو صفر خواهند ‫بود.

61
00:05:11,435 --> 00:05:13,598
‫زیرا سیستم محاسباتی طرحبندی
‫جاری هنوز اجرا نشده است.

62
00:05:13,731 --> 00:05:17,428
‫اگر کد شما نیاز دارد تا اندازه
‫دقیق یک عنصر را بداند…

63
00:05:17,489 --> 00:05:21,015
‫بهتر است این اندازه‌ها را در
‫روال رویدادگردان Updated آن‌ها بخوانید.

64
00:05:21,045 --> 00:05:24,917
‫که هر زمانیکه یک عنصر، اندازه یا
‫موقعیتش تغییر می‌کند، فراخوانی می‌گردد.

65
00:05:25,038 --> 00:05:32,334
‫تضمین شده است که خواص ActualWidth و
‫ActualHeight در روال رودیدادگران Updated
‫همیشه به روز باشند.

