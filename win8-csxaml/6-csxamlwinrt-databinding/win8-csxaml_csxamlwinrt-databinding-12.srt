1
00:00:01,297 --> 00:00:06,395
‫یک پروژه جدید را در اینجا آغاز کرده ام
‫و کلاس Person تعریف شده در
‫مثال‌های ‫قبلی را نیز در آن کپی نموده ام.

2
00:00:07,213 --> 00:00:09,398
‫در فایل Code behind صفحه اصلی

3
00:00:09,488 --> 00:00:12,112
‫مجموعه ای از اشیاء شیء Person
‫را ایجاد کرده ام.

4
00:00:12,421 --> 00:00:15,145
‫و آن را به DataContext صفحه
‫انتساب داده ام.

5
00:00:15,644 --> 00:00:16,322
‫بنابراین اکنون

6
00:00:16,472 --> 00:00:22,069
‫هر عبارت Binding تعریف شده ای در
‫صفحه بجای ارجاع به یک شخص، به
‫لیستی از اشخاص مقید خواهد شد.

7
00:00:23,476 --> 00:00:26,190
‫در فایل XAML مثال، یک ItemsControl
‫را اضافه می‌کنم.

8
00:00:27,687 --> 00:00:30,949
‫و خاصیت ItemsSource آن را از
‫طریق Binding مقدار دهی خواهم کرد

9
00:00:31,857 --> 00:00:39,739
‫منبع داده ای مورد استفاده در اینجا
‫همان DataContext صفحه است که
‫به مجموعه ای از اشخاص اشاره می‌کند
‫و قصد هم نداریم در این عبارت Binding
‫خاصیت دیگری را تعریف کنیم.

10
00:00:39,929 --> 00:00:41,884
‫و قصد داریم کل مجموعه را در اینجا
‫استفاده کنیم.

11
00:00:41,954 --> 00:00:43,431
‫و از آن جهت مقدار دهی ItemsControl
‫بهره جوئیم.

12
00:00:44,239 --> 00:00:46,923
‫همانطور که پیشتر نیز ذکر گردید،
‫در این حالت می‌توان خاصیت Path را

13
00:00:47,043 --> 00:00:48,639
‫به یک نقطه مقدار دهی کرد، تا
‫این امر رخ دهد.

14
00:00:50,096 --> 00:00:53,917
‫درحقیقت این نقطه مقدار پیش فرض
‫نیز می‌باشد و بنابراین می‌توان کل
‫خاصیت Path را از اینجا حذف کرد.

15
00:00:53,987 --> 00:00:59,554
‫بنابراین این عبارت خالی Binding
‫به این معنا است که کل شیء
‫معرفی شده در DataContext را
‫می خواهیم استفاده نمائیم.

16
00:01:00,751 --> 00:01:04,573
‫اگر برنامه را به همین شکل اجرا کنم،
‫آنچنان رخداد مفیدی را شاهد نخواهیم بود.

17
00:01:05,201 --> 00:01:10,988
‫این کنترل به ازای هر آیتم لیست
‫اشخاص یک فرزند را تولید خواهد کرد،
‫اما هنوز به آن نگفته ام که چگونه باید
‫این‌ها را نمایش دهد.

18
00:01:11,517 --> 00:01:14,251
‫بنابراین در حالت پیش فرض
‫فقط متد ToString را بر روی هر آیتم
‫اجرا خواهد کرد.

19
00:01:15,189 --> 00:01:18,591
‫و از آنجائیکه کلاس Person من
‫متد ToString را تحریف نکرده است.

20
00:01:19,170 --> 00:01:21,664
‫از پیاده سازی پیش فرض آن
‫استفاده خواهد شد

21
00:01:21,734 --> 00:01:23,430
‫که تنها نام کلاس را بر می‌گرداند.

22
00:01:24,777 --> 00:01:32,030
‫امکان ارائه متد سفارشی ToString
‫در کلاس شخص نیز وجود دارد؛ اما باید
‫درنظر داشت که ItemsControl از مکانیزمی
‫به مراتب قوی‌تر سود می‌جوید.

23
00:01:32,709 --> 00:01:34,904
‫در اینجا می‌توان قالبی را برای
‫اطلاعات تعریف کرد.

24
00:01:36,420 --> 00:01:39,613
‫برای اینکار باید خاصیت
‫ItemsControl. ItemTemplate را
‫مقدار دهی نمود.

25
00:01:40,282 --> 00:01:42,946
‫که نیاز است شیء DataTemplate باشد.

26
00:01:43,624 --> 00:01:49,161
‫ItemsControl مجموعه اشیاء تعریف شده
‫در اینجا را به ازای هر آیتم شیء منبع
‫وهله سازی خواهد کرد.

27
00:01:50,768 --> 00:01:51,426
‫علاوه بر آن

28
00:01:51,785 --> 00:01:54,759
‫DataContext را به صورت خودکار
‫به همان شیء تنظیم خواهد نمود

29
00:01:54,839 --> 00:01:57,542
‫بنابراین به ازای هر شیء
‫موجود در لیست

30
00:01:57,842 --> 00:02:02,561
‫یک کپی از این Template با تنظیم
‫DataContext آن به شیء شخص
‫تولید خواهد شد

31
00:02:03,060 --> 00:02:05,873
‫بنابراین هر نوع انقیاد داده ای
‫در این ناحیه

32
00:02:05,933 --> 00:02:07,580
‫به شیء شخص در لیست اشاره
‫خواهد کرد.

33
00:02:09,984 --> 00:02:14,045
‫در اینجا تنها می‌توان یک شیء را
‫به عنوان فرزند DataTemplate
‫معرفی کرد.

34
00:02:14,045 --> 00:02:17,497
‫بنابراین جهت استفاده از چندین المان
‫نیاز خواهد بود تا یک پنل را در اینجا
‫معرفی کرد.

35
00:02:17,916 --> 00:02:19,173
‫برای مثال در اینجا از یک StatckPanel
‫استفاده خواهم کرد.

36
00:02:19,273 --> 00:02:20,889
‫با جهتی افقی

37
00:02:21,837 --> 00:02:26,127
‫سپس یک TextBlock را جهت
‫نمایش خاصیت نام به صورت یک
‫برچسب، در اینجا اضافه خواهم کرد.

38
00:02:26,427 --> 00:02:29,081
‫همچنین اندازه قلم را هم به مقداری
‫بزرگتر تنظیم خواهم کرد

39
00:02:30,507 --> 00:02:32,024
‫و سپس یک TextBlock دیگر را

40
00:02:32,064 --> 00:02:34,349
‫که به خاصیت Name مقید شده است

41
00:02:34,588 --> 00:02:35,117
‫اضافه می‌کنم

42
00:02:37,222 --> 00:02:38,978
‫و همین کار را برای خاصیت

43
00:02:38,978 --> 00:02:39,776
‫سن انجام خواهیم داد.

44
00:02:45,693 --> 00:02:46,601
‫اجازه دهید تا برنامه را مجددا اجرا کنیم.

45
00:02:47,619 --> 00:02:51,250
‫اکنون کنترل ItemsControl از
‫قالب تعریف شده جهت نمایش هر شیء
‫استفاده خواهد کرد.

46
00:02:51,649 --> 00:02:52,647
‫این خروجی بسیار بهتر است.

47
00:02:53,365 --> 00:02:55,151
‫از آنجائیکه قالب تعریف شده تنها
‫از XAML تشکیل شده است

48
00:02:55,231 --> 00:02:56,897
‫هرچیزی را که دوست داشته باشم
‫می توانم در این میان قرار دهم

49
00:02:57,277 --> 00:03:03,243
‫هرچند در این مثال از یک سری
‫برچسب بی روح استفاده شده است؛
‫اما شما می‌توانید هر نوع المان رابط کاربری
‫را که دوست داشتید، در اینجا قرار دهید.

50
00:03:04,510 --> 00:03:07,134
‫این شیوه تهیه و مقدار دهی
‫قالب‌ها ‫با تمام ItemsControls
‫موجود کار می‌کند.

51
00:03:07,643 --> 00:03:11,195
‫برای مثال اکنون به XAML بازگشته و
‫این ItemsControl را به

52
00:03:11,434 --> 00:03:12,243
‫یک کنترل ListView تغییر می‌دهم.

53
00:03:13,669 --> 00:03:16,393
‫خواص المان‌ها را به همین شکل
‫باقی خواهیم گذاشت

54
00:03:16,742 --> 00:03:26,799
‫البته متداول است که دراینجا
‫از نام متناظری بجای ItemsControl
‫استفاده شود، اما تعریف فعلی نیز
‫مشکل ساز نیست؛ زیرا ItemsControl
‫کلاس پایه تمام این کنترل‌های لیستی است

55
00:03:27,548 --> 00:03:34,213
‫و تمام کنترل‌های لیستی خاصیت
‫قالب خود را از کلاس پایه ذکر شده
‫دریافت می‌کنند؛ بنابراین تعریف فعلی
‫مشکلی ندارد.

56
00:03:34,223 --> 00:03:36,178
‫و عنوان ItemsControl. ItemTemplate
‫بجای ListView. ItemTemplate نیز صحیح است.

57
00:03:38,742 --> 00:03:44,649
‫و مشاهده خواهید کرد که در اینجا نیز
‫از همان قالب قبلی استفاده شده،
‫اما بجای استفاده از ItemsControl جهت
‫اعمال آن

58
00:03:44,868 --> 00:03:54,028
‫از ListView برای میزبانی آن
‫کمک گرفته شده است که مباحث
‫تعاملی و امکان انتخاب توسط
‫کاربر را نیز پشتیبانی می‌کند.
‫برای مثال این تیک سمت راست نیز
‫مرتبط است به طراحی این کنترل‌های جدید.

59
00:03:54,985 --> 00:04:06,340
‫بدیهی است برای نمایش زیباتر آن
‫می توان این ListView را طوری تنظیم کرد
‫که کل عرض صفحه را پوشش ندهد
‫اما در کل این مباحث بیشتر به جزئیات
‫طرحبندی کار بر می‌گردد.

