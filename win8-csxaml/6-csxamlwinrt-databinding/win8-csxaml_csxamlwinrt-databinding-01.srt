1
00:00:01,217 --> 00:00:03,621
‫data binding مبتنی بر خواص
‫بسیار ساده است.

2
00:00:04,250 --> 00:00:08,420
‫در اینجا خواص المان‌های رابط کاربری را
‫به خواص اشیاء متصل خواهیم کرد.

3
00:00:08,420 --> 00:00:10,526
‫و اینکار را با نوشتن عبارات
‫انقیاد داده‌ها انجام می‌دهیم.

4
00:00:11,593 --> 00:00:13,379
‫زمانیکه در مورد data binding
‫بحث می‌کنیم

5
00:00:13,379 --> 00:00:17,470
‫به المان رابط کاربری، Traget یا
‫هدف خواهیم گفت و به سایر اشیاء
‫منبع یا Source می‌گوییم.

6
00:00:18,557 --> 00:00:19,346
‫در XAML

7
00:00:19,485 --> 00:00:23,815
‫اینکار را به کمک دستورات ویژه ای
‫که به خاصیت المان هدف اعمال می‌گردد،
‫انجام می‌دهیم.

8
00:00:24,783 --> 00:00:27,118
‫برای مثال این عبارات binding

9
00:00:27,287 --> 00:00:32,077
‫خاصیت Age منبع را به خاصیت
‫Text المان هدف

10
00:00:32,156 --> 00:00:33,483
‫تنظیم می‌کند.

11
00:00:34,980 --> 00:00:43,351
‫این آکولادها به XAML می‌گویند
‫که در اینجا ما از یک markup extension
‫استفاده خواهیم کرد، به این مفهوم که
‫در زمان اجرا این خاصیت را چگونه باید
‫تنظیم کرد.

12
00:00:44,279 --> 00:00:48,968
‫markup extension‌های متعددی در
‫XAML وجود دارند و این مورد منحصر به
‫Data Binding نیست.

13
00:00:50,076 --> 00:00:50,974
‫الگویی را در اینجا می‌توان مشاهده کرد.

14
00:00:51,353 --> 00:00:57,090
‫markup extension شیءایی را ایجاد کرده
‫که همان شیء انقیاد داده‌ها است.

15
00:00:57,090 --> 00:01:03,755
‫همچنین markup extension می‌تواند
‫شامل لیستی از مقادیر خواص نیز باشد،
‫بنابراین در اینجا مقدار Path به Age تنظیم می‌گردد.

16
00:01:03,814 --> 00:01:06,229
‫و نام خاصیتی است

17
00:01:06,299 --> 00:01:08,434
‫از شیء منبع که در اینجا بکار رفته است.

18
00:01:09,611 --> 00:01:14,859
‫شاید بپرسید که چرا در اینجا از کلمه
‫Path بجای Property استفاده شده است؟

19
00:01:15,568 --> 00:01:18,870
‫زیرا در اینجا Path همیشه حاوی
‫نام یک خاصیت نمی‌باشد.

20
00:01:19,589 --> 00:01:21,843
‫برای مثال می‌توان آن را حتی به یک
‫نقطه نیز تنظیم کرد.

21
00:01:22,073 --> 00:01:26,463
‫به این معنا که کل شیء منبع را
‫در این حالت قصد داریم به هدف
‫متصل کنیم.

22
00:01:27,211 --> 00:01:30,883
‫برای مثال اگر منبع داده ما یک رشته بود،
‫اینکار مفهوم پیدا می‌کند.

23
00:01:31,771 --> 00:01:34,784
‫همچنین در اینجا امکان ذکر
‫سلسله مراتبی از اشیاء نیز میسر است.

24
00:01:35,902 --> 00:01:36,760
‫برای مثال

25
00:01:36,999 --> 00:01:39,922
‫فرض کنید شیء منبع بیانگر
‫یک سفارش است

26
00:01:40,152 --> 00:01:48,533
‫و دارای خاصیتی به نام Customer است
‫که به شیء Person اشاره می‌کند. در این
‫حالت نوشتن Customer. Age نیز مجاز است.

27
00:01:49,181 --> 00:01:52,494
‫به علاوه امکان نوشتن حالت‌های
‫پیچیده‌تری ‫حین کار با مجموعه‌ها نیز میسر است.

28
00:01:53,053 --> 00:01:58,221
‫امکان استفاده از [] برای تعریف
‫اندیس‌ها نیز تدارک دیده شده است؛
‫همانند دسترسی به عناصر یک آرایه
‫در سی شارپ.

29
00:01:59,458 --> 00:02:05,554
‫اکنون سؤال مهم اینجا است که
‫سیستم انقیاد داده‌ها از کجا
‫خواهد دانست که چه شیءایی را
‫باید به عنوان منبع داده مورد استفاده قرار دهد؟

30
00:02:06,462 --> 00:02:08,098
‫برای نمونه ما در اینجا می‌دانیم که
‫قرار است از خاصیت Age استفاده کنیم

31
00:02:08,228 --> 00:02:09,994
‫اما این خاصیت از کجا آمده است؟

32
00:02:11,052 --> 00:02:13,726
‫برای مشخص سازی Source ،
‫چندین روش وجود دارد.

