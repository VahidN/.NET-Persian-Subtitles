1
00:00:01,117 --> 00:00:03,212
‫حین نمایش لیستی با تعداد زیادی آیتم

2
00:00:03,212 --> 00:00:05,627
‫گروه بندی آن‌ها مفید خواهد بود

3
00:00:05,627 --> 00:00:08,021
‫تا به این ترتیب کاربران ساده‌تر بتوانند
‫اطلاعاتی را که نیاز دارند پیدا کنند.

4
00:00:09,368 --> 00:00:10,216
‫برای مثال

5
00:00:10,536 --> 00:00:13,818
‫تبلت‌های ویندوز 8 اهدایی توسط
‫مایکروسافت به شرکت کنندگان
‫در کنفرانس Build ویندوز 8

6
00:00:14,087 --> 00:00:16,592
‫زمانبدی جلسات را

7
00:00:16,781 --> 00:00:18,438
‫گروه بندی شده بر اساس
‫بازه‌های زمانی نمایش می‌دهد.

8
00:00:21,990 --> 00:00:28,704
‫کنترل پایه ItemsControl
‫از گروه بندی پشتیبانی می‌کند. 
‫بنابراین پیاده سازی این مورد
‫در تمام لیست کنترل‌ها میسر است.

9
00:00:30,121 --> 00:00:42,184
‫البته اگر به جلسات ارائه شده
‫توسط مایکروسافت دقت کرده باشید،
‫در آن‌ها عنوان شده است که گروه بندی
‫اخیرا به کنترل‌های ListView و GridView
‫جدید مترو، اضافه شده اند

10
00:00:42,912 --> 00:00:44,578
‫که البته اندگی گمراه کننده است!

11
00:00:45,317 --> 00:00:58,197
‫این قابلیت جدید نیست. برای مثال
‫WPF از ابتدا ویژگی گروه بندی را
‫پشتیبانی می‌کرد و سیلورلایت نیز
‫بالاخره به این درجه رسید. 
‫البته جدید بودن آن در ویندوز 8 به این
‫معنا است که اندکی متفاوت رفتار می‌کند.

12
00:00:59,355 --> 00:01:03,445
‫همچنین این قابلیت به کنترل‌های
‫مشتق شده از ListView نیز
‫محدود نمی‌شود.

13
00:01:04,024 --> 00:01:07,147
‫گروه بندی در کنترل پایه
‫ItemsControl نیز به خوبی کار می‌کند.

14
00:01:07,606 --> 00:01:12,265
‫البته یک سری از ویژگی‌های خاص
‫گروه بندی تنها در ListView و GridView
‫مهیا هستند.

15
00:01:13,153 --> 00:01:17,873
‫برای مثال اگر نیاز به قابلیت
‫بزرگنمایی مفهومی که در قسمت‌های
‫قبل به آن پرداختیم، داشته باشید

16
00:01:18,232 --> 00:01:24,867
‫تنها در WinRT این نوع کنترل‌های ‫جدید
‫هستند که این قابلیت را
‫به همراه گروه بندی ارائه می‌دهند.

17
00:01:26,513 --> 00:01:27,860
‫برای نمایش گروهی از اطلاعات

18
00:01:28,149 --> 00:01:32,439
‫باید یک سری تغییرات را در XAML
‫و همچنین کدهای برنامه که تامین کننده
‫منبع داده می‌باشند، انجام دهید.

19
00:01:32,659 --> 00:01:38,476
‫این مهم‌ترین تفاوت بین گروه بندی
‫در WinRT و نمونه مشابه موجود
‫در WPF و سیلورلایت است.

20
00:01:39,064 --> 00:01:49,431
‫در این فناوری‌های قدیمی تر،
‫هر مجموعه متداول و ساده ای را
‫که بیانگر گروه بندی خاصی نیستند،
‫می توان به شکل گروه بندی شده ای نمایش داد.

21
00:01:49,990 --> 00:01:52,933
‫می توان به این فریم ورک‌ها گفت که
‫اطلاعات را بر اساس خاصیت خاصی
‫گروه بندی نمائید.

22
00:01:53,951 --> 00:01:57,034
‫اما این قابلیت در WinRT وجود ندارد.

23
00:01:57,463 --> 00:02:00,107
‫و برای پشتیبانی از گروه بندی
‫نیاز است کد نویسی انجام شود.

24
00:02:00,835 --> 00:02:06,093
‫به صورت ویژه باید اینترفیس
‫IGroupInfo را پیاده سازی کنیم.

25
00:02:06,243 --> 00:02:07,510
‫که در ادامه به آن خواهیم پرداخت.

26
00:02:08,697 --> 00:02:15,362
‫برای هر گروهی که می‌خواهیم نمایش دهیم
‫باید هر وهله ساخته شده، IGroupInfo
‫را نیز پیاده سازی کرده باشد.

27
00:02:16,370 --> 00:02:20,839
‫به علاوه باید درنظر داشت که این
‫مجموعه را مستقیما به یک ItemsControl
‫نمی توان ارسال کرد.

28
00:02:21,199 --> 00:02:26,576
‫ما باید این اطلاعات را توسط
‫کلاسی به نام CollectionViewSource
‫محصور کنیم.

29
00:02:28,741 --> 00:02:36,723
‫CollectionViewSource در
‫WPF و سیلورلایت نیز وجود دارد
‫و توسط آن است که کار گروه بندی
‫در این فناوری‌ها پشتیبانی می‌شود.

30
00:02:36,823 --> 00:02:41,712
‫همچنین CollectionViewSource در
‫WPF و سیلورلایت از قابلیت‌های
‫جستجو و مرتب سازی نیز بهره مند است.

31
00:02:42,790 --> 00:02:47,279
‫CollectionViewSource موجود در
‫WinRT هیچکدام از این موارد
‫را پشتیبانی نمی‌کند.

32
00:02:47,579 --> 00:02:52,228
‫و تنها موردی را که ارائه داده،
‫ردیابی آیتمی است که هم اکنون
‫انتخاب شده.

33
00:02:53,166 --> 00:02:56,409
‫با توجه به اینکه CollectionViewSource
‫در اینجا دیگر هیچ راهنمایی خاصی را

34
00:02:56,478 --> 00:02:57,626
‫در مورد گروه بندی اطلاعات ارائه نمی‌دهد

35
00:02:58,155 --> 00:03:01,896
‫اما گروه بندی نیز بدون استفاده از
‫CollectionViewSource کار نخواهد کرد.

36
00:03:02,704 --> 00:03:13,300
‫هرچند در حالت کلی می‌توان
‫کنترل‌ها را به مجموعه ای از اشیاء
‫Bind کرد، اما انجام اینکار در حالتیکه
‫گروه بندی فعال شده باشد

37
00:03:13,420 --> 00:03:14,328
‫کار نخواهد کرد.

38
00:03:15,635 --> 00:03:16,603
‫به بیانی دیگر

39
00:03:16,603 --> 00:03:22,469
‫هرچند CollectionViewSource کمک
‫مفیدی را در اینجا ارائه نمی‌دهد اما
‫اصرار دارد که حضور داشته باشد.

40
00:03:23,168 --> 00:03:30,890
‫بنابراین وجود CollectionViewSource
‫جهت مدیریت گروه‌ها ضروری است؛
‫هرچند نسبت به فناوری‌های قبلی
‫موجود قابلیت‌های کمتری دارد.

41
00:03:32,806 --> 00:03:37,116
‫زمانیکه ما داده‌های خود را به نحوی
‫گروه بندی کردیم که ItemsControl
‫بتواند آن‌ها را استفاده کند

42
00:03:37,525 --> 00:03:41,217
‫نیاز خواهیم داشت تا اندکی
‫کدهای XAML برنامه را تغییر دهیم
‫تا مشخص سازیم که گروه‌ها چگونه باید
‫نمایش داده شوند.

43
00:03:42,145 --> 00:03:42,843
‫ابتدا نیاز است

44
00:03:43,142 --> 00:03:47,832
‫تا خاصیت GroupStyle را
‫مقدار دهی کنیم که خاصیتی
‫را حاوی دو قالب دریافت می‌کند.

45
00:03:47,832 --> 00:03:55,993
‫HeaderTemplate، هدر هر گروه
‫را مشخص می‌کند، برای مثال اگر
‫قرار است اطلاعات را بر اساس روز
‫گروه بندی کنید

46
00:03:56,332 --> 00:03:58,717
‫بهتر است نمایش روز را در این هدر قرار دهید

47
00:03:59,346 --> 00:04:00,822
‫البته بدیهی است هرچیزی را اینجا
‫می توان قرار داد.

48
00:04:00,972 --> 00:04:05,023
‫DataContext این قالب به شیءایی
‫که بیانگر گروه است، تنظیم می‌شود.

49
00:04:05,970 --> 00:04:09,143
‫البته باید توجه داشت که این شیء
‫همان شیء گروهی که ما
‫تعریف می‌کنیم، نیست.

50
00:04:09,552 --> 00:04:13,074
‫این مورد شیءایی است که
‫توسط CollectionViewSource
‫تولید می‌شود.

51
00:04:13,892 --> 00:04:19,949
‫فیلد کلید مشخص کننده گروه بندی
‫آیتم ها، در این شیء توسط خاصیتی
‫به نام Name در دسترس می‌باشد.

52
00:04:21,086 --> 00:04:23,980
‫این مورد اندکی گیج کننده است
‫زیرا در سمت منبع داده ما

53
00:04:24,129 --> 00:04:29,776
‫IGroupInfo نیاز دارد که این کلید را
‫توسط خاصیتی

54
00:04:29,776 --> 00:04:30,245
‫به نام Key معرفی کنیم

55
00:04:31,183 --> 00:04:40,672
‫احتمالا دلیل این نامگذاری به سازگاری
‫آن با CollectionViewSource
‫مرتبط با WPF و سیلورلایت بر می‌گردد.

56
00:04:41,081 --> 00:04:49,053
‫به این ترتیب می‌توان برنامه‌های قدیمی
‫را اندکی ساده‌تر به برنامه‌های جدید
‫مترو، تبدیل کرد.

57
00:04:49,422 --> 00:04:58,331
‫اما اگر حین نمایش هدر، اطلاعاتی
‫را مشاهده نکردید، فراموش نکنید
‫که خاصیت Key در اینجا به Name
‫تغییر نام یافته است.

58
00:05:00,686 --> 00:05:01,604
‫مورد دوم درباره

59
00:05:01,873 --> 00:05:11,352
‫قالب بندی یک گروه این است که
‫مشخص کنیم چگونه آیتم‌ها باید
‫آرایش داده شوند. برای این منظور
‫باید خاصیت Panel را در اینجا
‫مقدار دهی کرد که توسط آن
‫می توان پنل طرحبندی را مشخص نمود.

60
00:05:11,980 --> 00:05:15,353
‫این مورد پنلی است درون
‫یک تک گروه

61
00:05:15,961 --> 00:05:17,767
‫و مرتبط به کل ItemsControl نمی‌شود.

62
00:05:18,536 --> 00:05:21,289
‫به طور معمول برای هر کدام
‫از پنل‌های مختلفی استفاده می‌گردد.

63
00:05:22,596 --> 00:05:31,785
‫برای مثال در یک GridView شاید
‫علاقمند باشید که طرحبندی کلی
‫افقی باشد، اما آیتم‌های درون
‫هر گروه در یک StackPanel عمودی
‫نمایش داده شوند.

64
00:05:32,254 --> 00:05:33,631
‫بنابراین انتخاب متداول در اینجا

65
00:05:33,851 --> 00:05:37,592
‫استفاده از یک WrapGrid با اندازه متغیر
‫تنظیم شده به حالت عمودی است.

66
00:05:39,428 --> 00:05:41,314
‫علاوه بر نحوه آرایش گروه ها

67
00:05:41,563 --> 00:05:45,345
‫نیاز به تنظیم خاصیت
ItemsControl. ItemsPanel
‫برای کل کنترل نیز خواهد بود

68
00:05:45,345 --> 00:05:48,328
‫برای مثال حین استفاده از
‫یک GridView حتما نیاز به
‫تنظیم آن خواهد بود.

69
00:05:48,697 --> 00:05:49,964
‫زیرا به صورت پیش فرض

70
00:05:50,054 --> 00:05:55,332
‫GridView یک تک پنل را جهت
‫میزبانی مستقیم تمام آیتم‌ها ‫ارائه می‌دهد.

71
00:05:56,330 --> 00:06:00,720
‫این مورد هنگامیکه از گروه بندی استفاده نمی‌شود
‫بدون مشکل کار می‌کند؛ اما
‫با شروع به گروه بندی اطلاعات

72
00:06:00,780 --> 00:06:05,239
‫یک گرید بزرگ، روش طرحبندی کلی
‫مناسبی نخواهد بود.

73
00:06:05,718 --> 00:06:08,033
‫پشته ای از گریدهای افقی،
‫چیزی است که مورد نیاز است.

74
00:06:08,702 --> 00:06:11,974
‫اگر این پنل پیش فرض را به همراه
‫گروه بندی در یک GridView باقی بگذارید

75
00:06:12,273 --> 00:06:15,586
‫رفتاری بسیار عجیب را شاهد خواهید بود
‫و نتیجه قابل استفاده نخواهد بود.

76
00:06:17,162 --> 00:06:20,215
‫و این تمام چیزی است که برای
‫گروه بندی اطلاعات خود نیاز داریم.

77
00:06:20,844 --> 00:06:22,732
‫اجازه دهید تا آن را پیاده سازی و آزمایش کنیم.

