1
00:00:01,277 --> 00:00:08,351
‫یکی از ویژگی‌های data binding
‫که WinRT از WPF و سیلورلایت
‫به ارث برده است، پشتیبانی از
‫value converters می‌باشد.

2
00:00:09,248 --> 00:00:10,346
‫یک value converter

3
00:00:10,396 --> 00:00:13,579
‫اساسا شیءایی است که در میانه
‫عملیات binding قرار می‌گیرد

4
00:00:13,878 --> 00:00:16,522
‫و یک نحوهٔ ارائه را به نوعی دیگر
‫تبدیل می‌کند.

5
00:00:17,320 --> 00:00:18,118
‫برای مثال

6
00:00:18,607 --> 00:00:22,868
‫فرض کنید که تبدیلگری را دارید
‫که انتظار دارد یک شیء منبع را
‫که ارائه دهندهٔ یک مقدار عددی است
‫دریافت کند

7
00:00:22,997 --> 00:00:29,473
‫و کارش این است که بر اساس
‫مثبت یا منفی بودن این اعداد،
‫آن‌ها را به صورت قرمز یا مشکی نمایش دهد.

8
00:00:30,141 --> 00:00:36,776
‫بنابراین رابط کاربری ما از یک TextBlock
‫که خاصیت Text آن به خاصیت عددی
‫یک شیء به نحوی متداول bind شده،
‫می تواند تشکیل شود.

9
00:00:36,776 --> 00:00:38,452
‫و خاصیت رنگ قلم آن

10
00:00:38,721 --> 00:00:42,094
‫به همین خاصیت اما با عبور
‫از این تبدیلگر bind شده است.

11
00:00:42,593 --> 00:00:46,973
‫و رنگ را در صورت مثبت بودن عدد
‫به مشکلی و به قرمز در صورت منفی بودن
‫عدد، تنظیم خواهد نمود.

12
00:00:48,619 --> 00:00:52,221
‫باید اعتراف کنم که من آنچنان به
‫این value converters علاقمند، نبوده و نیستم!

13
00:00:52,380 --> 00:00:58,566
‫زیرا به این نحو به نظر می‌رسد که به
‫اطلاعات نادرستی مقید شده ایم و قرار
‫است این مشکل را در کدهای برنامه حل کنیم.

14
00:01:00,462 --> 00:01:03,735
‫برای هر فایل XAML و فایل code behind آن
‫در برنامه ام

15
00:01:03,934 --> 00:01:08,444
‫معمولا کلاسی را تهیه می‌کنم
‫که کارش ارائه DataContext باشد

16
00:01:09,172 --> 00:01:12,365
‫به این مورد ViewModel یا Presenter
‫هم گفته می‌شود

17
00:01:13,024 --> 00:01:19,040
‫و از آنجائیکه کار این کلاس تبدیلگر
‫قرار گرفتن بین رابط کاربری و اشیاء منبع
‫داده شما است

18
00:01:19,629 --> 00:01:23,709
‫تمام خواصی را که ارائه می‌دهد
‫باید هم اکنون برای استفاده در
‫data binding مناسب باشد

19
00:01:24,388 --> 00:01:27,211
‫بنابراین اگر خود را حین استفاده از
‫value converter یافتید

20
00:01:27,491 --> 00:01:33,128
‫به این معنا است که منبع داده شما
‫از ابتدای کار بر این نوع binding
‫طراحی نشده است.

21
00:01:34,475 --> 00:01:38,725
‫همچنین ممکن است انقیاد مستقیم
‫به اشیاء لایه‌های زیرین
‫بسیار وسوسه کننده باشد

22
00:01:39,364 --> 00:01:45,629
‫برای مثال عموما برنامه نویس‌ها ‫تمایل دارند
‫که از نوع‌های تولید شده
‫توسط ارجاعاتی به وب سرویس‌ها
‫به عنوان منبع داده استفاده کنند.

23
00:01:46,268 --> 00:01:49,431
‫و به این ترتیب انقیاد مستقیم به لایه ای
‫پایین تر

24
00:01:49,650 --> 00:01:54,100
‫در نوشتن لایه ای میانی
‫مانند ViewModel صرفه جویی خواهد کرد

25
00:01:55,627 --> 00:01:57,902
‫بنابراین اگر خود را حین نوشتن
‫value converters یافتید

26
00:01:58,111 --> 00:01:59,598
‫هنوز آن لایه اضافی را دارید

27
00:01:59,937 --> 00:02:02,641
‫و به این ترتیب نوشتن آن را
‫نیز اندکی مشکل‌تر کرده اید.

28
00:02:02,990 --> 00:02:06,253
‫هرچند در بعضی از موارد، استفاده
‫از value converters می‌توانند
‫نجات بخش باشند

29
00:02:06,532 --> 00:02:11,990
‫برای مثال حین انقیاد از یک المان به المانی
‫دیگر، استفاده از یک value converter
‫نسبت به راه حل‌های دیگر
‫بسیار ساده‌تر خواهد بود.

30
00:02:12,179 --> 00:02:15,733
‫اما در کل نباید زیاد به این نوع راه حل
‫وابسته شد.

