1
00:00:01,097 --> 00:00:04,729
‫من در اینجا برنامه ای را نوشته ام
‫که قابلیت گروه بندی را داخل یک
‫GridView پیاده سازی کرده است.

2
00:00:05,607 --> 00:00:09,388
‫می توانید مشاهده کنید که این کنترل
‫یکی از کنترل‌های جدید مترو است و این
‫مطلب از نحوه انتخاب یکی
‫از آیتم‌های ‫آن مشخص می‌باشد.

3
00:00:10,605 --> 00:00:14,975
‫اطلاعاتی که در اینجا نمایش داده شده است
‫شامل نام و تاریخ تولد افراد است و این اطلاعات
‫به صورت اتفاقی تولید شده است.

4
00:00:16,053 --> 00:00:19,615
‫GridView من اطلاعات اشخاص را
‫بر اساس سال تولد، گروه بندی کرده است.

5
00:00:19,984 --> 00:00:21,650
‫و این سال تولد را در هدر گروه‌ها
‫می توانید مشاهده نمائید.

6
00:00:22,159 --> 00:00:25,322
‫همچنین مشخص است که هر سال
‫یک ستون جدید را نیز آغاز کرده است.

7
00:00:27,567 --> 00:00:28,774
‫اجازه دهید تا به کدهای برنامه
‫نگاهی بیندازیم.

8
00:00:30,251 --> 00:00:31,737
‫با بررسی XAML

9
00:00:31,747 --> 00:00:34,731
‫می توانید تمام مباحثی را که
‫در جلسه قبل در مورد آن‌ها بحث شد،
‫مشاهده نمائید.

10
00:00:35,249 --> 00:00:37,365
‫برای مثال ItemsPanel
‫مخصوص کل کنترل

11
00:00:37,365 --> 00:00:38,901
‫یک StackPanel افقی است.

12
00:00:39,320 --> 00:00:45,526
‫بنابراین با فعال سازی گروه بندی،
‫یک آیتم را به ازای هر گروه در این
‫پنل می‌توان مشاهده کرد.
‫این پنل از نوع StackPanel افقی بوده

13
00:00:45,756 --> 00:00:47,661
‫و در برگیرنده آیتم‌های مخصوص
‫به هر سال

14
00:00:47,921 --> 00:00:49,307
‫قرار گرفته در یک پشته از سمت
‫چپ به راست می‌باشد.

15
00:00:51,622 --> 00:00:54,845
‫و سپس GroupStyle نحوه
‫نمایش هر گروه را مشخص می‌کند.

16
00:00:55,194 --> 00:01:01,789
‫در اینجا HeaderTemplate
‫تنها به ظاهر نام را نمایش می‌دهد؛
‫و همانطور که پیشتر نیز ذکر شد،
‫این Name به معنای کلیدی است
‫که اطلاعات بر اساس آن
‫گروه بندی شده است.

17
00:01:02,168 --> 00:01:06,937
‫و در مثال ما این کلید، سال
‫می باشد. بنابراین در هدر هر گروه
‫سال تولد اشخاص قابل مشاهده خواهد بود.

18
00:01:07,975 --> 00:01:11,018
‫و در ادامه در کدهای XAML برنامه
‫در قسمت GroupStyle. Panel
‫پنلی که نحوه طرحبندی آیتم‌های
‫درون گروه را مشخص می‌کند،
‫تعریف گردیده است.

19
00:01:12,036 --> 00:01:18,551
‫هرچند مطابق تعاریف XAML در اینجا،
‫سال‌های تولد اشخاص از چپ به راست
‫توسط StackPanel آرایش داده شده اند،
‫هر کدام از اشخاص مرتبط با آن سال

20
00:01:18,800 --> 00:01:20,746
‫از VaribaleSizedWrapGrid
‫استفاده می‌کنند

21
00:01:20,866 --> 00:01:24,328
‫تا به پشتهٔ متداول نحوه نمایش
‫آیتم‌ها در GridView برسیم.

22
00:01:26,044 --> 00:01:29,297
‫اکنون اجازه دهید کدهای برنامه را
‫با بررسی کلاس Person مشاهده کنیم.

23
00:01:29,546 --> 00:01:34,585
‫این کلاس با نمونه قبلی آن در جلسات
‫قبل بسیار شباهت داشته و تنها تفاوت آن
‫اضافه شدن خاصیت سال تولد به آن می‌باشد.

24
00:01:35,343 --> 00:01:37,308
‫به این ترتیب گروه بندی بر اساس
‫سال ساده‌تر خواهد شد.

25
00:01:38,057 --> 00:01:38,845
‫همچنین

26
00:01:39,004 --> 00:01:47,106
‫در این مثال نام و نام خانوادگی
‫را از هم جدا کرده ام تا بتوان
‫تعدادی اسم اتفاقی را ساده‌تر تولید کرد.
‫و این متد کمکی…

27
00:01:47,346 --> 00:01:52,195
‫کار تولید اشخاصی را بر اساس
‫اطلاعاتی اتفاقی برعهده دارد.

28
00:01:53,801 --> 00:01:57,014
‫من این متد کمکی را در فایل
‫Code behind صفحه اصلی
‫فراخوانی می‌کنم.

29
00:01:58,001 --> 00:02:00,845
‫همانطور که مشاهده می‌کنید
‫در اینجا 200 شخص را قرار است
‫ایجاد کنیم.

30
00:02:01,434 --> 00:02:04,596
‫سپس به کمک امکانات LINQ
‫این اطلاعات را بر اساس سال
‫گروه بندی خواهم کرد.

31
00:02:05,923 --> 00:02:09,954
‫در projection نهایی این کوئری
‫از کلاسی به نام MyGroup
‫استفاده شده است.

32
00:02:10,533 --> 00:02:15,951
‫این کلاس بر اساس پیاده سازی
‫اینترفیس IGroupInfo مورد نیاز
‫جهت گروه بندی آیتم‌های کنترل
‫تهیه شده است.

33
00:02:16,669 --> 00:02:17,756
‫اجازه دهید تا به کدهای آن
‫نگاهی بیندازیم.

34
00:02:19,752 --> 00:02:25,778
‫من کلاس را به صورت جنریک
‫تعریف کرده ام تا بتواند هر نوعی
‫را به عنوان کلید و هر نوع آیتمی را
‫درون گروه، استفاده کند.

35
00:02:26,576 --> 00:02:35,756
‫در اینجا اطلاعات بر اساس سال
‫گروه بندی می‌شوند، و اعضای
‫گروه، وهله هایی از شیء شخص
‫می باشند. به علاوه سه عضو
‫دیگر مورد نیاز جهت پیاده سازی
‫اینترفیس IGroupInfo نیز در اینجا
‫قابل مشاهده هستند.

36
00:02:36,624 --> 00:02:39,268
‫باید Key را به صورت یک شیء
‫معرفی کنیم

37
00:02:39,707 --> 00:02:45,184
‫همچنین این اینترفیس نیاز دارد تا
‫IEnumerable of object را نیز
‫پیاده سازی کنیم که به این ترتیب

38
00:02:45,324 --> 00:02:51,799
‫باید نمونه قدیمی IEnumerable
‫موجود را نیز پیاده سازی کرد.
‫در این حالت به دو متد
‫GetEnumerator جنریک و غیرجنریک
‫خواهیم رسید.

39
00:02:52,917 --> 00:02:56,878
‫هرچند این موارد زمانیکه به
‫WinRT می‌رسند به نوع کاملا
‫متفاوتی نگاشت خواهند شد.

40
00:02:57,536 --> 00:03:03,243
‫دات نت در WinRT به صورت خودکار
‫تعدادی از انواع را در این بین، نگاشت خواهد کرد.

41
00:03:03,622 --> 00:03:07,044
‫و این مورد شامل تعدادی از انواع
‫مجموعه‌های استاندارد نیز می‌شود.

42
00:03:07,623 --> 00:03:16,593
‫بنابراین این IEnumerable هایی را
‫که در اینجا مشاهده می‌کنید بیشتر
‫به جهت متداول بودن در دات نت تعریف شده اند
‫تا اینکه واقعا در WinRT مستقیما
‫مورد استفاده قرار گیرند.

43
00:03:17,970 --> 00:03:22,210
‫به هر حال؛ نکته مهم در اینجا این است
‫که یکی از این اشیاء را به ازای هر گروه
‫ارائه دهیم.

44
00:03:23,098 --> 00:03:28,985
‫WinRT بر این اساس می‌تواند کلیدی
‫را که گروه بر اساس آن تشکیل شده
‫همچنین المان‌های موجود در گروه را
‫تشخیص دهد.

45
00:03:31,559 --> 00:03:32,995
‫با نگاهی مجدد به فایل Code behind

46
00:03:33,215 --> 00:03:39,820
‫می توانید مشاهده کنید که منبع
‫شیءایی به نام CVS را مقدار دهی کرده ام
‫که همان CollectionViewSource من می‌باشد

47
00:03:39,820 --> 00:03:43,322
‫و آن را به صورت یک Resource در فایل
‫XAML خود تعریف کرده ام.

48
00:03:44,270 --> 00:03:45,118
‫این بالا

49
00:03:46,156 --> 00:03:48,809
‫و همچنین ItemsSource مرتبط با
‫GridView من نیز به آن Bind شده است.

50
00:03:50,246 --> 00:03:51,364
‫و این کل ماجرا است.

51
00:03:52,072 --> 00:03:58,587
‫مجموعه ای از اشیاء پیاده سازی کننده
‫IGroupInfo را تهیه کرده و به منبع داده
‫CollectionViewSource انتساب دادیم و سپس
‫آن را به عنوان منبع داده GridView معرفی کردیم

52
00:03:58,737 --> 00:04:02,568
‫و سپس با تعریف GroupStyle
‫از آن درخواست کردیم که اطلاعات
‫bind شده را در طی گروه هایی
‫نمایش دهد.

53
00:04:03,536 --> 00:04:11,368
‫کاری را که در اینجا هنوز انجام نداده ام،
‫تعریف ItemTemplate می‌باشد؛
‫بنابراین ممکن است بپرسید که نهایتا
‫چگونه اطلاعاتی با مفهوم را در صفحه
‫شاهد خواهیم بود؟

54
00:04:11,438 --> 00:04:14,162
‫بجای نمایش نام کلاس، همانند مثالی
‫که در قسمت قبل مشاهده کردیم.

55
00:04:15,000 --> 00:04:26,706
‫به همین دلیل در این مثال،
‫متد ToString کلاس شخص را
‫تحریف کرده ام.
‫البته به طور معمول بهتر است
‫قالب آیتم‌ها را همانند سناریوهای
‫متداول و غیرگروه بندی شده،
‫تعریف نمود.

