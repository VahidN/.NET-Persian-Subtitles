1
00:00:01,097 --> 00:00:01,845
‫عموما

2
00:00:01,845 --> 00:00:05,138
‫data binding اطلاعات را از منبع
‫داده به شیء هدف ارسال می‌کند.

3
00:00:05,697 --> 00:00:13,289
‫برای مثال زمانیکه از یک شیء معمولی
‫دات نت به عنوان منبع داده استفاده می‌شود
‫سیستم Binding خواص این شیء را خوانده
‫و اطلاعات آن را در صفحه نمایش خواهد داد.

4
00:00:13,958 --> 00:00:17,689
‫اما گاهی از اوقات نیاز است تا اطلاعات
‫در هر دو جهت قابل انتقال و سیلان باشند.

5
00:00:18,757 --> 00:00:20,573
‫فرض کنید که شیء هدف من

6
00:00:20,653 --> 00:00:24,624
‫اینبار TextBlock نبوده و مثلا TextBox است.

7
00:00:25,132 --> 00:00:29,592
‫TextBox نه فقط جهت نمایش اطلاعات
‫بلکه برای ویرایش آن نیز کاربرد دارد.

8
00:00:30,201 --> 00:00:31,308
‫در این حالت

9
00:00:31,308 --> 00:00:33,962
‫می خواهم که اطلاعات در هر دو جهت
‫سیلان نمایند.

10
00:00:35,010 --> 00:00:40,378
‫می خواهم در حین اولین بار نمایش برنامه
‫TextBox مقدار خاصیت Bind شده به آن را
‫نمایش دهد.

11
00:00:40,737 --> 00:00:42,593
‫اما اگر کاربر متنی را ویرایش کرد

12
00:00:42,752 --> 00:00:46,374
‫علاقمندم که اطلاعات تغییر کرده به
‫شیء منبع نیز منعکس گردد.

13
00:00:47,242 --> 00:00:48,829
‫به صورت پیش فرض این مساله رخ نخواهد داد.

14
00:00:49,347 --> 00:00:53,059
‫اما امکان تنظیم آن به کمک خاصیت
‫BindingMode مهیا است.

15
00:00:53,847 --> 00:00:55,873
‫مقدار پیش فرض آن OneWay است.

16
00:00:56,122 --> 00:00:57,599
‫اما اگر آن را به TwoWay تنظیم کنیم

17
00:00:58,087 --> 00:01:01,719
‫هر نوع تغییر و ورودی اطلاعاتی به
‫منبع نیز منعکس خواهد شد.

18
00:01:03,146 --> 00:01:08,953
‫بدیهی است این نوع تنظیم تنها زمانی
‫معنا خواهد داشت که کنترل مورد استفاده
‫توسط تعامل کاربر با برنامه قابل تغییر باشد.

19
00:01:08,953 --> 00:01:12,974
‫برای مثال مانند خاصیت Text یک TextBox
‫یا خاصیت Value یک کنترل Slider

20
00:01:13,981 --> 00:01:15,907
‫اما در مورد خاصیت Text یک TextBlock

21
00:01:16,206 --> 00:01:20,746
‫تعیین حالت TwoWay مفید نخواهد بود
‫زیرا کاربر امکان تغییر آن را ندارد.

22
00:01:21,484 --> 00:01:28,379
‫به همین ترتیب تنظیم خاصیت maximum
‫یک کنترل Slider نیز به حالت دو طرفه
‫بی معنا است زیرا کاربر امکان تغییر آن را ندارد.

23
00:01:30,294 --> 00:01:35,872
‫همچنین باید دقت داشت که تنظیم حالت
‫Binding به حالت دوطرفه به این معنا نیست
‫که با هر تغییر کوچکی، منبع نیز به روز خواهد شد.

24
00:01:36,380 --> 00:01:39,763
‫برای مثال اگر کاربر در حال تایپ
‫در یک TextBox است

25
00:01:40,172 --> 00:01:43,185
‫شیء منبع bind شده به آن
‫با هر تغییری در اطلاعات ورودی
‫بلافاصله به روز نخواهد شد

26
00:01:43,754 --> 00:01:49,062
‫این انعکاس اطلاعات به منبع داده
‫تنها زمانی رخ خواهد داد که فوکوس
‫به کنترل دیگری منتقل گردد.

27
00:01:49,940 --> 00:01:51,656
‫و این مورد گاهی از اوقات می‌تواند
‫مساله ساز باشد.

28
00:01:51,985 --> 00:01:53,482
‫و متاسفانه

29
00:01:53,621 --> 00:01:56,804
‫WinRT فعلا راه حلی را برای آن
‫ارائه نداده است.

30
00:01:57,792 --> 00:01:59,308
‫اما WPF و Silverlight این امکان را دارند.

31
00:01:59,737 --> 00:02:05,185
‫در دنیای آن‌ها امکان تنظیم خاصیت
‫UpdateSourceTrigger میسر بوده
‫و به این ترتیب می‌توان مشخص ساخت
‫که منبع داده چه زمانی باید به روز شود.

32
00:02:05,634 --> 00:02:08,687
‫اما این مورد فعلا در WinRT
‫پیاده سازی نشده است.

33
00:02:11,012 --> 00:02:12,828
‫حالت سوم Binding ایی نیز وجود دارد

34
00:02:13,446 --> 00:02:14,444
OneTime

35
00:02:14,943 --> 00:02:19,093
‫این مورد بیشتر شبیه به حالت
‫Binding یک طرفه است که تنها
‫فقط یکبار رخ می‌دهد.

36
00:02:19,772 --> 00:02:23,384
‫اگر منبع داده ما پس از این
‫انتقال اولیه اطلاعات تغییر کند

37
00:02:23,443 --> 00:02:25,519
‫شیء هدف به روز نخواهد شد.

38
00:02:26,137 --> 00:02:34,029
‫اما در حالت‌های یک طرفه و دو طرفه
‫Binding این به روز رسانی را هربار
‫به صورت خودکار انجام خواهد داد.

39
00:02:34,548 --> 00:02:40,587
‫اما این موارد عنوان شده تنها زمانی
‫اعمال خواهند شد که به نحوی به سیستم
‫اعلام شود که خاصیت منبع تغییر کرده است.

