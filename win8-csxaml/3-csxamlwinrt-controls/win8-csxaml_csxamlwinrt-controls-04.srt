1
00:00:00,310 --> 00:00:07,831
‫در برنامه‌های مترو‫
‫برای نمایش Context menu همانند WPF
‫نمی توان تنها خاصیت مرتبط را تنظیم ‫کرد.

2
00:00:08,136 --> 00:00:17,087
‫درعوض باید رخداد RightTapped را مدیریت نمود
‫که هم برای کلیک راست ماوس و همچنین
‫ضربه زدن و نگه داشتن انگشت بر روی صفحه
‫رخ می‌دهد.

3
00:00:17,380 --> 00:00:20,528
‫همانطور که ملاحظه می‌کنید اینکار برای
‫المان border در کدهای xaml برنامه انجام
‫شده است.

4
00:00:20,977 --> 00:00:31,080
‫و سپس منو را از طریق کد
‫نویسی ایجاد کرده ام. هر فرمان را
‫توسط اشیاء UICommand به
‫مجموعه فرامین این منو افزوده ام.

5
00:00:31,389 --> 00:00:35,739
‫سپس محل نمایش منو از طریق متد
‫GetPosition دریافت می‌شود.

6
00:00:35,778 --> 00:00:43,228
‫البته برای اینکار متدهای مختلفی وجود دارد. 
‫یکی بر اساس پیکسل کار می‌کند
‫و دیگری بر اساس یک ناحیه مستطیلی.

7
00:00:43,346 --> 00:00:49,154
‫در این حالت، منو در کنار این
‫مستطیل بدون تداخل با آن نمایش داده
‫خواهد شد.

8
00:00:49,320 --> 00:00:54,551
‫این حالت زمانی مفید است که نمی‌خواهید
‫Context menu، محتوای در حال نمایش را مخفی کند.

9
00:00:54,977 --> 00:00:57,755
‫اما برای این مثال با متد مبتنی
‫بر نقطه کار خواهیم کرد.

10
00:00:57,832 --> 00:01:06,608
‫متد نمایشی، غیرهمزمان است بنابراین از کلمه
‫کلیدی await استفاده شده است به همراه
‫async معرفی کردن متد جاری.

11
00:01:06,731 --> 00:01:12,356
‫و پس از انجام، فرمانی را که
‫کاربر انتخاب کرده است باز می‌گرداند.

12
00:01:12,756 --> 00:01:15,118
‫یا null اگر کاربر از منو صرفنظر
‫کرده باشد.

13
00:01:15,174 --> 00:01:23,264
‫اگر برنامه را اجرا کرده
‫و به این المان ضربه زده و
‫انگشت خود را نگه داریم، منو ظاهر
‫خواهد شد.

14
00:01:23,646 --> 00:01:29,986
‫و سپس یک گزینه را انتخاب کرده
‫و همانطور که ملاحظه می‌کنید، آیتم
‫انتخابی در یک TextBlock نمایش داده می‌‫شود.

15
00:01:30,045 --> 00:01:41,082
‫و یا اگر منو را ظاهر کرده
‫و سپس در کنار شیء ضربه بزنیم
‫یا کلیک کنیم، منو محو شده و
‫متنی دیگر که بیانگر این عملیات است
‫نمایش داده خواهد شد.

16
00:01:41,129 --> 00:01:46,410
‫اگر به کد برگردیم مشاهده می‌کنید
‫که دو متد OnOpen و OnClose هم
‫تعریف شده اند.

17
00:01:46,676 --> 00:01:55,005
‫شاید تصور کنید که می‌توان به سادگی
‫نمایش اطلاعات رابط کاربری را به این
‫callbacks منتقل کرد.

18
00:01:55,351 --> 00:01:59,436
‫اجازه دهید تا اینکار را امتحان کنیم. 
‫کدها مورد نظر را کپی کرده و…

19
00:01:59,639 --> 00:02:02,758
‫و درون هر دو متد paste خواهیم
‫کرد.

20
00:02:02,990 --> 00:02:07,293
‫و سپس متن متناظر هر callback را تغییر
‫خواهیم داد.

21
00:02:07,653 --> 00:02:13,650
‫برنامه را اجرا می‌کنیم، به محض
‫نمایش رابط کاربری…

22
00:02:14,053 --> 00:02:15,384
‫به شیء ضربه زده و انگشت خود
‫را نگه می‌دارم…

23
00:02:15,719 --> 00:02:17,974
‫و منتظر Context menu می‌شوم.

24
00:02:18,005 --> 00:02:22,318
‫و اکنون بر روی open ضربه می‌‫زنم
‫و بوم…!

25
00:02:22,325 --> 00:02:26,254
‫اوه… آسمان در حال سقوط است!

26
00:02:26,498 --> 00:02:34,225
‫علت این خطا آن است که در
‫ترد صحیحی برای نمایش اطلاعات
‫رابط کاربری قرار نداریم

27
00:02:34,401 --> 00:02:35,823
‫بجای قرار داشتن در ترد رابط کاربری.

28
00:02:35,976 --> 00:02:46,946
‫و بهتر است که از واژه کلیدی
‫await استفاده شود تا کدهای پس از
‫آن در ترد اصلی برنامه اجرا گردند.

29
00:02:46,979 --> 00:02:53,833
‫به این ترتیب مدیریت رخدادهای مرتبط با
‫فرامین منوی‌های ظاهر شده بسیار
‫ساده‫تر خواهند شد.

