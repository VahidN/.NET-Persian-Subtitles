1
00:00:00,310 --> 00:00:11,101
‫همانند سیلورلایت و WPF ، در مترو
‫نیز کنترلی به نام ItemsControl وجود
‫دارد که کلاس پایه تعدادی کنترل‌ها است
‫و ‫تمام آن‌ها جهت نمایش مجموعه ای از
‫اشیاء بکار می‌روند.

2
00:00:11,387 --> 00:00:14,810
‫ItemsControl به خودی خود یک
‫کلاس مستقل ‫است.

3
00:00:14,892 --> 00:00:19,107
‫بنابراین به خودی خود قابل استفاده است اما
‫دارای امکانات تعاملی نیست.

4
00:00:19,107 --> 00:00:21,340
‫این کنترل فقط تعدادی آیتم را که
‫در اختیار آن قرار داده می‌شود،
‫نمایش می‌دهد.

5
00:00:21,597 --> 00:00:27,445
‫به نظر نمی‌رسد که این کنترل
‫آنچنان جالب توجه باشد زیرا بسیار شبیه
‫به StackPanel به نظر می‌رسد.

6
00:00:27,539 --> 00:00:31,232
‫ItemsControl اشیاء فرزند خود را
‫به صورت عمودی نمایش داده و حتی
‫قابلیت اسکرول را نیز به همراه ندارد.

7
00:00:31,551 --> 00:00:36,982
‫اما بر اساس آنچه که در مباحث
‫انقیاد به داده‌ها خواهیم دید،
‫ItemsControl بسیار مهم هستند.

8
00:00:37,058 --> 00:00:42,403
‫زیرا برخلاف StackPanel قادر است تا اشیاء
‫فرزند خود را به صورت خودکار از
‫یک منبع داده تولید کند.

9
00:00:42,452 --> 00:00:52,057
‫البته بحث فعلی در مورد انقیاد به
‫داده‌ها نیست بنابراین فقط درنظر داشته
‫باشید که ItemsControl دارای API ایی است
‫که آن را قادر می‌سازد تا
‫اشیاء فرزند خود را مدیریت و آرایش کند.

10
00:00:52,194 --> 00:00:57,781
‫دو کنترل آشنای مشتق شده
‫از ItemsControl، کنترل‌های
‫ListBox و ComboBox هستند.

11
00:00:57,985 --> 00:01:01,698
‫این کنترل‌ها در مترو بسیار شبیه
‫به معادل‌های خود در سیلورلایت و
‫WPF هستند.

12
00:01:01,947 --> 00:01:06,166
‫به این معنا که شما مجاز هستید
‫هر نوع شیءایی را به عنوان آیتم‫های
‫لیستی آن‌ها بکار برید.

13
00:01:06,365 --> 00:01:11,444
‫این کنترل‌ها قادر هستند ترکیبی از
‫متن، تصاویر و غیره را بعنوان آیتم‫های
‫خود نمایش دهند.

14
00:01:11,568 --> 00:01:16,123
‫همچنین می‌توان از سایر کنترل‌های تعاملی
‫داخل آیتم‌های لیست کنترل‌های مترو ‫استفاده کرد.

15
00:01:16,383 --> 00:01:24,851
‫هر دوی این کنترل‌ها از کلاسی به نام
‫Selector که از کلاس ItemsControl
‫مشتق گردیده، تهیه شده اند و کلاس
‫Selector مشخص می‌کند که کدام آیتم
‫هم اکنون انتخاب شده است.

16
00:01:24,855 --> 00:01:30,453
‫کنترل ComboBox در مترو جهت
‫پشتیبانی بهتر از ورودی‌های لمسی
‫اندکی به روز شده است.

17
00:01:30,605 --> 00:01:34,701
‫مهم‌ترین تفاوت در اینجا است که
‫زمانیکه لیست را به کمک انگشتان
‫خود ‫می لغزانید

18
00:01:35,024 --> 00:01:41,678
‫به یک حالت حلقوی وارد می‌شود.
‫زمانیکه به پایین لیست می‌رسید،
‫همینطور می‌توانید ادامه دهید.

19
00:01:41,678 --> 00:01:44,236
‫به این معنا که آیتم‌های بالای
‫لیست مجددا در انتهای لیست
‫جهت مرور ظاهر می‌شوند.

20
00:01:44,573 --> 00:02:01,108
‫من به این تغییرات خوشامد می‌گویم
‫زیرا نام رسمی کشوری که در آن
‫زندگی می‌کنم
‫United kingdom of great Britain and northern island
‫است ‫و با U شروع می‌شود و همانند
‫USA با آن برخورد ویژه ای نمی‌شود؛ بنابراین
‫به طور معمول در پایین لیست کشورها ظاهر می‌گردد

21
00:02:01,142 --> 00:02:07,341
‫بنابراین لغزیدن اندکی به سمت بالا
‫بهبودی نسبی است نسبت به لغزیدن
‫به انتهای لیست.

22
00:02:07,379 --> 00:02:12,707
‫برخلاف بهبود نسبی کنترل ComboBox ،
‫کنترل ListBox آنچنان تغییری نکرده است.

23
00:02:13,017 --> 00:02:20,528
‫با در نظر گرفتن عدم تغییرات آنچنانی
‫این کنترل، ListBox کنترل مطلوبی
‫جهت توسعه برنامه‌های مترو
‫به شمار ‫نمی رود.

24
00:02:20,686 --> 00:02:27,162
‫این کنترل فقط جهت حفظ سازگاری و
‫انتقال ساده‌تر برنامه‌های WPF و
‫سیلورلایت به مترو در اینجا وجود دارد.

25
00:02:27,442 --> 00:02:32,780
‫اما اگر در اینجا قصد دارید لیستی
‫از اطلاعات را نمایش دهید، توصیه شده
‫است که از کنترل‌های جدید لیستی
‫مترو استفاده کنید.

26
00:02:33,030 --> 00:02:41,227
‫دو کنترل جدید لیستی مترو، ListView و
‫GridView هستند که از کلاس پایه ای
‫به نام ListViewBase مشتق شده اند.

27
00:02:41,471 --> 00:02:46,384
‫البته باید دقت داشت که ListView مترو
‫با ListView موجود در WPF یکی نیست.

28
00:02:46,521 --> 00:02:51,157
‫این کنترل‌های مخصوص WinRT ، ویژگی‫های
‫مختلفی را جهت سهولت دریافت
‫ورودی‫های لمسی تدارک دیده اند.

29
00:02:51,285 --> 00:02:54,689
‫برای مثال این کنترل‌ها انتخاب تعدادی
‫از عناصر خود را به کمک نگه‫داشتن
‫و سپس کشیدن انگشت، پشتیبانی می‌کنند.

30
00:02:55,065 --> 00:03:00,333
‫در حالت کلی ضربه زدن به صفحه
‫با انگشت، سبب بروز رخدادهای
‫متفاوتی می‌شود

31
00:03:00,672 --> 00:03:07,186
‫برای مثال اگر به یک آیتم موجود
‫در لیستی ضربه بزنید، نمایش کامل
‫آن ظاهر می‌شود

32
00:03:07,387 --> 00:03:14,569
‫برای مثال اگر یک لیست، تصاویر را
‫در حالت بندانگشتی نمایش می‌دهد، ضربه
‫زدن با انگشت به آن‌ها باید ‫سبب
‫نمایش آن تصویر انتخابی در اندازه ‫اصلی شود.

33
00:03:14,660 --> 00:03:18,913
‫بنابراین مترو قرارداد متفاوتی را برای انتخاب
‫اشیاء تعریف کرده است به نام…

34
00:03:19,212 --> 00:03:21,558
‫نگه داشتن و کشیدن کوتاه

35
00:03:21,649 --> 00:03:26,558
‫البته این مورد اندکی روش دریافت اطلاعات
‫مبتنی بر نگه داشتن و کشیدن اصلی
‫را تحریف می‌کند زیرا از آن
‫برای لغزاندن لیست‌ها استفاده می‌گردد.

36
00:03:26,698 --> 00:03:30,660
‫اما در برنامه‌های مترو، لیست‌ها ‫
‫تنها در یک جهت خواهند لغزید

37
00:03:30,925 --> 00:03:36,904
‫که عموما افقی است و نگه داشتن
‫و کشیدن در جهتی دیگر می‌تواند
‫برای انتخاب عناصر مورد استفاده قرارگیرد.

38
00:03:36,979 --> 00:03:38,906
‫که به آن نگه داشتن و کشیدن
‫عرضی نیز گفته می‌شود

39
00:03:38,950 --> 00:03:45,962
‫ListView مترو از این روش دریافت ورودی
‫اطلاعات پشتیبانی کرده و
‫آیتم‌های ‫انتخابی را با یک قاب ویژه
‫گرافیکی نمایش می‌دهد.

40
00:03:46,274 --> 00:03:53,205
‫کنترل ListView همچنین قابلیت کشیدن و رها
‫کردن به همراه تغییر ترتیب آیتم‌های ‫لیستی
‫خود را نیز می‌دهد.

41
00:03:53,467 --> 00:03:56,764
‫همچنین از بارگذاری تدریجی
‫اطلاعات نیز پشتیبانی می‌کند

42
00:03:56,900 --> 00:04:02,386
‫بنابراین اگر در سناریوهای انقیاد داده ها،
‫لیستی دارای صدها و هزاران آیتم دارید

43
00:04:02,437 --> 00:04:05,953
‫این مکانیزم از انجام کارهای غیرضروری
‫جلوگیری خواهد کرد.

44
00:04:06,095 --> 00:04:11,683
‫رابط کاربری را تاحد ممکن پاسخگو
‫نگه داشته و اطلاعات را به صورت غیرهمزمان
‫واکشی می‌کند.

45
00:04:11,996 --> 00:04:19,408
‫کنترل‌های ListView و GridView
‫دارای طرحبندی پیش فرضی هستند که
‫جهت دریافت ‫ورودی‌ها لمسی مفید می‌باشند.

46
00:04:19,595 --> 00:04:24,640
‫ListBox آیتم‌ها را خیلی نزدیک به
‫هم نمایش می‌دهد که جهت استفاده
‫در حالات لمسی ناخوشایند است.

47
00:04:24,644 --> 00:04:30,640
‫و تنها یک طرحبندی ثابت را ارائه
‫می دهند. به همین جهت ListView و
‫GridView باید انتخاب اول شما به شمار ‫روند.

48
00:04:31,003 --> 00:04:34,104
‫ListBox تنها جهت ارتباط ما با دنیای
‫گذشته در اینجا وجود دارد.

49
00:04:34,193 --> 00:04:37,846
‫خوب اکنون چگونه باید بین ListView و
‫GridView یکی را انتخاب کرد؟

50
00:04:37,962 --> 00:04:46,610
‫حقیقت این است که این دو بسیار
‫شبیه به هم هستند و هیچ متد
‫یا خاصیتی را بیشتر از آنچه که
‫کلاس پایه ListViewBase ارائه می‌دهد،
‫تدارک ندیده اند.

51
00:04:46,831 --> 00:04:49,448
‫بنابراین از دیدگاه برنامه نویسی این دو
‫کنترل یکی هستند.

52
00:04:49,685 --> 00:04:53,741
‫تفاوت اصلی در اینجا است که هرکدام
‫جهت طرحبندی متفاوتی طراحی شده اند.

53
00:04:53,982 --> 00:04:57,674
‫ListView برای لیست‌های ساده خطی
‫بسیار مناسب است

54
00:04:57,994 --> 00:04:59,486
‫که عموما مانند به یک پشته عمودی ‫باشد

55
00:04:59,803 --> 00:05:03,439
‫GridView ، یک گرید از آیتم‌ها ‫را
‫بجای خط مستقیمی از آن‌ها، ‫ارائه می‌دهد.

56
00:05:03,836 --> 00:05:07,482
‫و متداول است که از آن جهت
‫طرحبندی هایی که دارای نوار لغزشی
‫افقی ‫هستند استفاده گردد.

57
00:05:07,828 --> 00:05:15,410
‫بسیار معمول است که در یک صفحه
‫از GridView برای تهیه محتوای آن استفاده
‫شود البته منهای هدر و پس زمینه ‫آن.

58
00:05:15,733 --> 00:05:19,902
‫به طور معمول از ListView به تنهایی
‫استفاده نمی‌شود.

59
00:05:20,212 --> 00:05:23,762
‫از این کنترل بیشتر در سناریوهای
‫Master-Detail استفاده می‌شود.

60
00:05:24,021 --> 00:05:27,901
‫برای مثال ممکن است یک ListView را
‫در سمت چپ صفحه برای نمایش
‫مجموعه ای از عناصر داشته باشید

61
00:05:27,902 --> 00:05:29,613
‫و زمانیکه کاربر یکی را انتخاب کرد

62
00:05:29,852 --> 00:05:32,918
‫اطلاعات تکمیلی مربوط به آن آیتم در
‫بقیه فضای صفحه نمایش داده شود.

63
00:05:33,073 --> 00:05:39,550
‫جهت تکمیل این تصویر، یک کنترل دیگر
‫هم وجود دارد که FlipView نامیده می‌شود.

64
00:05:39,554 --> 00:05:42,040
‫هرچند این کنترل از ListViewBase
‫مشتق نشده است

65
00:05:42,257 --> 00:05:45,961
‫این مورد هم یکی دیگر از کنترل‫های
‫جدید است که خصوصا جهت پشتیبانی
‫از ورودی‌های لمسی طراحی شده است.

66
00:05:46,320 --> 00:05:53,167
‫این کنترل یک نمایش بزرگ را از
‫آیتمی که هم اکنون انتخاب شده ارائه ‫می دهد
‫به طوریکه می‌توان به سمت چپ و راست آن
‫به کمک نگه داشتن و کشیدن انگشت، لغزید.

67
00:05:53,167 --> 00:05:56,485
‫برای مثال از آن جهت ساخت یک
‫مرورگر تصاویر می‌توان استفاده کرد.

68
00:05:56,590 --> 00:06:06,357
‫در ادامه به مثال هایی در مورد
‫این کنترل‌ها خواهیم پرداخت اما در
‫ابتدا نیاز بود تا با تفاوت‌های ‫بین
‫کنترل‌های لیستی قدیمی و جدید
‫آشنا شویم.

