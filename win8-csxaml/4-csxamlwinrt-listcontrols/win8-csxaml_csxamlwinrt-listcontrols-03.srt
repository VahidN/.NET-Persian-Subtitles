1
00:00:00,310 --> 00:00:09,100
‫در بحث قبلی به بررسی خواص و تفاوت‌های ‫کنترل
‫جدید ListView مترو با نمونه پیشین
‫آن یا همان ListBox پرداختیم.

2
00:00:09,101 --> 00:00:12,137
‫اما GridView چطور؟ این کنترل چه مواردی
‫را اضافه کرده است؟

3
00:00:12,371 --> 00:00:15,815
‫GridView بسیار شبیه به ListView است.

4
00:00:15,968 --> 00:00:25,854
‫در اینجا به مستندات نصب شده بر
‫بر روی سیستم جهت مشاهده خواص و
‫متدهای مختص به کلاس GridView مراجعه کرده ام.

5
00:00:26,188 --> 00:00:36,984
‫مطابق مستندات فوق، اکثر متدهای کلاس
‫GridView از کلاس‌های مختلف به ارث
‫برده شده اند.

6
00:00:37,160 --> 00:00:42,698
‫و اگر به سمت چپ مستندات و
‫نمایش درختی آن مراجعه کنیم، اعضایی را
‫که منحصر به GridView هستند می‌توان
‫مشاهده کرد.

7
00:00:42,930 --> 00:00:44,788
‫و… این مورد تنها سازندهٔ
‫آن کلاس است!

8
00:00:44,930 --> 00:00:51,033
‫این کلاس هیچ عضو جدیدی را اضافه
‫نکرده و همه چیز را از کلاس‫های
‫پایه خود به ارث برده ‫است.

9
00:00:51,300 --> 00:00:58,377
‫چنین چیزی را در مورد ListView هم
‫می توان مشاهده کرد.

10
00:00:58,381 --> 00:01:03,471
‫بنابراین از دیدگاه API ارائه شده، دو
‫کنترل ListView و GridView در حقیقت یک
‫کنترل بیشتر نیستند.

11
00:01:03,745 --> 00:01:05,881
‫و تنها از جهت نحوه نمایش عناصر
‫تفاوت دارند.

12
00:01:06,254 --> 00:01:11,499
‫حالت پیش فرض نمایش عناصر در ListView
‫به صورت یک پشته عمودی است.

13
00:01:11,597 --> 00:01:15,440
‫اما حالت پیش فرض نمایش عناصر در
‫GridView، یک گرید لغزنده افقی است.

14
00:01:15,834 --> 00:01:21,953
‫این پروژه جدید ما در اینجا بسیار
‫شبیه به پروژه قبلی در مورد ListView
‫و ListBox است.

15
00:01:22,284 --> 00:01:26,514
‫تمام کاری که انجام شده این است
‫که ListBox حذف شده و ListView به
‫GridView تبدیل شده است.

16
00:01:26,897 --> 00:01:36,890
‫کدهای فایل code behind نیز به همین
‫ترتیب تغییر کرده اند. مواردی که مرتبط
‫با ListBox بوده حذف، و بجای ListView
‫از GridView استفاده شده است.

17
00:01:37,289 --> 00:01:44,658
‫بنابراین مطابق کدهایی که ملاحظه می‌کنید،
‫دکمه Add یک آیتم را به انتهای
‫لیست، دکمه Insert آیتمی را به ابتدای
‫لیست خواهند افزود و دکمه حذف آیتمی
‫را از لیست حذف خواهد کرد.

18
00:01:44,736 --> 00:01:47,271
‫اجازه دهید تا این برنامه را اجرا ‫کنیم.

19
00:01:47,346 --> 00:01:58,664
‫در ابتدا همه چیز مانند قبل به
‫نظر می‌رسد، پویانمایی به همراه افزودن
‫یک عنصر به انتهای لیست و همچنین
‫لغزیدن لیست در حالت افزودن آیتمی به
‫ابتدای آن.

20
00:01:58,806 --> 00:02:02,647
‫تفاوت زمانی آشکار خواهد شد که تعداد
‫آیتم‌ها کل ارتفاع صفحه را پرکنند.

21
00:02:02,726 --> 00:02:07,116
‫با افزودن آیتم‌های بیشتر همانطور که
‫ملاحظه می‌کنید، این موارد در ستون
‫دوم نمایش داده خواهند شد.

22
00:02:07,409 --> 00:02:13,545
‫و این مورد به همین ترتیب با
‫افزودن ستون‌های دیگر ادامه خواهد یافت.

23
00:02:13,972 --> 00:02:18,896
‫و به صورت پیش فرض تمام سلول‫ها
‫به یک اندازه بوده و یک
‫Grid را بر روی صفحه تشکیل خواهند ‫داد.

24
00:02:19,113 --> 00:02:28,439
‫البته این مورد آنچنان مطلوب به نظر
‫نمی رسد زیرا اندازه این سلول‌ها ‫به
‫اندازه اولین سلول اضافه شده به
‫صفحه، تنظیم شده اند.

25
00:02:28,683 --> 00:02:32,635
‫و با اضافه شدن ستون‌های دوم و سوم
‫شاهد در هم فرورفتگی این
‫سلول‌ها خواهیم بود.

26
00:02:32,806 --> 00:02:35,995
‫بنابراین نیاز است تا جهت بیشتر شدن
‫فاصله بین سلول‌ها کاری کرد.

27
00:02:36,311 --> 00:02:42,487
‫چندین روش برای انجام اینکار وجود دارد. 
‫برای مثال بجای افزودن آیتم‌ها از
‫طریق کدهای برنامه

28
00:02:42,834 --> 00:02:47,036
‫یک عنصر رابط کاربری را افزوده و
‫اندازه آن را به صورت صریح تنظیم
‫خواهم کرد.

29
00:02:47,282 --> 00:02:53,439
‫یا در حالت استفاده از XAML یک
‫DataTemplate را می‌توان تعریف کرد تا
‫نحوه نمایش آیتم‌ها را تعریف نمود.

30
00:02:53,713 --> 00:02:55,637
‫و سپس عرض را در آنجا می‌‫توان
‫تنظیم نمود.

31
00:02:55,907 --> 00:02:57,937
‫اما در اینجا کار دیگری را انجام
‫می دهیم.

32
00:02:58,255 --> 00:03:00,180
‫از شیوه نامه‌ها برای انجام اینکار
‫کمک خواهیم گرفت.

33
00:03:00,500 --> 00:03:12,472
‫برخلاف شیوه نامه ای که در قسمت‫های
‫قبل جهت اعمال به کل GridView
‫تعریف کردیم، در اینجا قرار است
‫این شیوه نامه به تک تک عناصر
‫یک GridView اضافه شود.

34
00:03:12,689 --> 00:03:16,271
‫اینکار را با تمام ItemsControls مهیا نیز
‫می توان انجام داد.

35
00:03:16,296 --> 00:03:18,999
‫برای این مقصود با خاصیت
‫ItemContainerStyle را مقدار دهی نمود.

36
00:03:19,333 --> 00:03:25,599
‫و در اینجا می‌توان این شیوه نامه
‫را به تک تک کنترل‌های تعریف
‫شده در لیست اعمال نمود.

37
00:03:25,835 --> 00:03:36,947
‫هر دوی کنترل‌های ListView و GridView
‫جهت نمایش عناصر در حالت پیش فرض
‫یک ListViewItem را تشکیل می‌دهند

38
00:03:36,948 --> 00:03:47,517
‫هرچند می‌توان این مورد را تغییر
‫داد برای مثال اگر اینکار در کدهای
‫برنامه تعریف می‌شد، GridView از آن
‫نمونه بجای نمونه پیش فرض استفاده می‌‫کرد.

39
00:03:47,869 --> 00:03:50,282
‫بجای تولید محصور کننده‌های خودش.

40
00:03:50,581 --> 00:03:56,464
‫اما از آنجائیکه در اینجا تنها از
‫رشته‌ها جهت تشکیل عناصر استفاده شده
‫است، از ListViewItem جهت محصور سازی
‫آن‫ها ‫کمک گرفته است.

41
00:03:56,687 --> 00:04:02,074
‫و سپس این شیوه نامه را اعمال
‫می کنیم. از این شیوه نامه در
‫اینجا جهت تنظیم عرض
‫کمک گرفته شده ‫است.

42
00:04:02,254 --> 00:04:05,317
‫برای مثال آن را به 200 پیکسل
‫تنظیم خواهیم کرد.

43
00:04:05,372 --> 00:04:10,612
‫اکنون اگر مجددا برنامه را اجرا کرده
‫و تعدادی آیتم را اضافه کنیم

44
00:04:10,899 --> 00:04:14,615
‫با انتخاب هر آیتم می‌توان دریافت
‫که عرض آن‌ها بیشتر شده است.

45
00:04:14,780 --> 00:04:24,990
‫و اگر شروع به افزودن تعدادی بیشتر
‫المان نمائیم، فضای تنفس بیشتری را بین
‫المان‌های گرید می‌توان مشاهده نمود.

